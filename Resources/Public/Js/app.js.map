{"version":3,"sources":["map.js"],"names":["BwrkMarkerMap","map","id","options","center","lat","lng","zoom","styles","featureType","elementType","stylers","color","visibility","weight","googleElement","geoCoder","distanceMatrix","searchBox","markers","init","mapDiv","document","getElementById","this","google","maps","Map","Geocoder","DistanceMatrixService","$","parent","children","that","forEach","element","index","tmpMarker","Marker","position","title","icon","marker_id","uid","addListener","ajax","method","url","data","eID","tx_bwrkmarkermap_pi2[uid]","done","content","InfoWindow","open","submit","inputValue","find","val","codeAddress","address","geocode","results","status","GeocoderStatus","OK","result","nearestMarkerObject","measureDistance","geometry","location","nearestMarker","locationMarker","fitBounds","origin","R","distances","closest","i","length","mlat","mlng","dLat","rad","dLong","a","Math","sin","cos","c","atan2","sqrt","d","x","PI","bounds","LatLngBounds","extend","getPosition"],"mappings":"AAAA,GAAIA,gBACAC,KACIC,GAAI,KACJC,SACIC,QACIC,IAAK,KACLC,IAAK,MAETC,KAAM,KACNC,SACIC,YAAe,QACfC,YAAe,gBACfC,UAAaC,MAAS,cAEtBH,YAAe,UACfE,UAAaC,MAAS,YAAaC,WAAc,UAEjDJ,YAAe,eACfC,YAAe,kBACfC,UAAaE,WAAc,OAAQD,MAAS,cAE5CH,YAAe,eACfC,YAAe,gBACfC,UAAaC,MAAS,cAEtBH,YAAe,aACfC,YAAe,gBACfC,UAAaE,WAAc,OAAQD,MAAS,YAAaE,OAAU,QAEnEL,YAAe,aACfC,YAAe,kBACfC,UAAaC,MAAS,cAEtBH,YAAe,MACfC,YAAe,gBACfC,UAAaE,WAAc,OAAQD,MAAS,cAE5CH,YAAe,iBACfC,YAAe,WACfC,UAAaC,MAAS,cAEtBH,YAAe,gBACfC,YAAe,gBACfC,UAAaC,MAAS,cAEtBH,YAAe,gBACfC,YAAe,gBACfC,UAAaC,MAAS,cAEtBH,YAAe,YACfC,YAAe,gBACfC,UAAaE,WAAc,OAAQD,MAAS,cAE5CH,YAAe,OACfC,YAAe,mBACfC,UAAaC,MAAS,cAEtBH,YAAe,iBACfC,YAAe,mBACfC,UAAaE,WAAc,OAAQD,MAAS,cAE5CH,YAAe,MACfC,YAAe,cACfC,UAAaE,WAAc,UAE3BJ,YAAe,MACfC,YAAe,SACfC,UAAaE,WAAc,UAE3BJ,YAAe,gBACfC,YAAe,kBACfC,UAAaC,MAAS,cAEtBH,YAAe,OACfC,YAAe,cACfC,UAAaE,WAAc,UAE3BJ,YAAe,MACfC,YAAe,gBACfC,UAAaC,MAAS,eAG9BG,cAAe,MAEnBC,SAAU,KACVC,eAAgB,KAChBC,UAAW,KACXC,QAAS,KACTC,KAAM,WACF,GAAIC,GAASC,SAASC,eAAeC,KAAKvB,IAAIC,GAC9CsB,MAAKvB,IAAIc,cAAgB,GAAIU,QAAOC,KAAKC,IAAIN,EAAQG,KAAKvB,IAAIE,SAE9DqB,KAAKR,SAAW,GAAIS,QAAOC,KAAKE,SAChCJ,KAAKP,eAAiB,GAAIQ,QAAOC,KAAKG,sBACtCL,KAAKN,UAAYY,EAAE,IAAMN,KAAKvB,IAAIC,IAAI6B,OAAO,sBAAsBC,SAAS,gCAE5E,IAAIC,GAAOT,IACXA,MAAKL,QAAQe,QAAQ,SAAUC,EAASC,GACpC,GAAIC,GAAY,GAAIZ,QAAOC,KAAKY,QAC5BC,SAAUJ,EAAQI,SAClBtC,IAAKgC,EAAKhC,IAAIc,cACdyB,MAAOL,EAAQK,MACfC,KAAMN,EAAQM,KACdC,UAAWP,EAAQQ,KAEvBN,GAAUO,YAAY,QAAS,WAC3Bd,EAAEe,MACEC,OAAQ,MACRC,IAAK,YACLC,MACIC,IAAO,mBACPC,4BAA6Bb,EAAUK,aAE5CS,KAAK,SAAUC,GACd,GAAI3B,QAAOC,KAAK2B,YACZD,QAASA,IACVE,KAAKrB,EAAKhC,IAAIc,cAAesB,SAK5Cb,KAAKN,UAAUc,SAAS,QAAQuB,OAAO,WACnC,GAAIC,GAAa1B,EAAEN,MAAMiC,KAAK,oDAAoDC,KAElF,OADAzB,GAAK0B,YAAYH,IACV,KAIfG,YAAa,SAAUC,GACnB,GAAI3B,GAAOT,IACXA,MAAKR,SAAS6C,SACVD,QAAWA,GAEf,SAAUE,EAASC,GACf,GAAIA,GAAUtC,OAAOC,KAAKsC,eAAeC,GAAI,CACzC,GAAIC,GAASJ,EAAQ,GACjBK,EAAsBlC,EAAKmC,gBAAgBF,EAAOG,SAASC,UAC3DC,EAAgB,GAAI9C,QAAOC,KAAKY,QAChCC,SAAU4B,EAAoB5B,WAE9BiC,EAAiB,GAAI/C,QAAOC,KAAKY,QACjCrC,IAAKgC,EAAKhC,IAAIc,cACdwB,SAAU2B,EAAOG,SAASC,WAE1BnD,IACAA,GAAQ,GAAKqD,EACbrD,EAAQ,GAAKoD,EACjBtC,EAAKwC,UAAUtD,OAI3BiD,gBAAiB,SAASM,GAEtB,GAAIrE,GAAMqE,EAAOrE,MACbC,EAAMoE,EAAOpE,MACbqE,EAAI,KACJC,KACAC,EAAU,GACV5C,EAAOT,IAEX,KAAKsD,EAAE,EAAEA,EAAItD,KAAKL,QAAQ4D,OAAQD,IAAM,CACpC,GAAIE,GAAO/C,EAAKd,QAAQ2D,GAAGvC,SAASlC,IAChC4E,EAAOhD,EAAKd,QAAQ2D,GAAGvC,SAASjC,IAChC4E,EAAQjD,EAAKkD,IAAIH,EAAO3E,GACxB+E,EAAQnD,EAAKkD,IAAIF,EAAO3E,GACxB+E,EAAIC,KAAKC,IAAIL,EAAK,GAAKI,KAAKC,IAAIL,EAAK,GACrCI,KAAKE,IAAIvD,EAAKkD,IAAI9E,IAAQiF,KAAKE,IAAIvD,EAAKkD,IAAI9E,IAAQiF,KAAKC,IAAIH,EAAM,GAAKE,KAAKC,IAAIH,EAAM,GACvFK,EAAI,EAAIH,KAAKI,MAAMJ,KAAKK,KAAKN,GAAIC,KAAKK,KAAK,EAAEN,IAC7CO,EAAIjB,EAAIc,CACZb,GAAUE,GAAKc,GACC,IAAXf,GAAiBe,EAAIhB,EAAUC,MAChCA,EAAUC,GAGlB,MAAOtD,MAAKL,QAAQ0D,IAExBM,IAAK,SAASU,GACV,MAAOA,GAAEP,KAAKQ,GAAG,KAErBrB,UAAW,SAAStD,GAGhB,IAAK,GADD4E,GAAS,GAAItE,QAAOC,KAAKsE,aACpBlB,EAAI,EAAGA,EAAI3D,EAAQ4D,OAAQD,IAChCiB,EAAOE,OAAO9E,EAAQ2D,GAAGoB,cAE7B1E,MAAKvB,IAAIc,cAAc0D,UAAUsB","file":"app.js","sourcesContent":["var BwrkMarkerMap = {\n    map: {\n        id: null,\n        options: {\n            center: {\n                lat: null,\n                lng: null\n            },\n            zoom: null,\n            styles: [{\n                \"featureType\": \"water\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"color\": \"#d3d3d3\"}]\n            }, {\n                \"featureType\": \"transit\",\n                \"stylers\": [{\"color\": \"#808080\"}, {\"visibility\": \"off\"}]\n            }, {\n                \"featureType\": \"road.highway\",\n                \"elementType\": \"geometry.stroke\",\n                \"stylers\": [{\"visibility\": \"on\"}, {\"color\": \"#b3b3b3\"}]\n            }, {\n                \"featureType\": \"road.highway\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"color\": \"#ffffff\"}]\n            }, {\n                \"featureType\": \"road.local\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"visibility\": \"on\"}, {\"color\": \"#ffffff\"}, {\"weight\": 1.8}]\n            }, {\n                \"featureType\": \"road.local\",\n                \"elementType\": \"geometry.stroke\",\n                \"stylers\": [{\"color\": \"#d7d7d7\"}]\n            }, {\n                \"featureType\": \"poi\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"visibility\": \"on\"}, {\"color\": \"#ebebeb\"}]\n            }, {\n                \"featureType\": \"administrative\",\n                \"elementType\": \"geometry\",\n                \"stylers\": [{\"color\": \"#a7a7a7\"}]\n            }, {\n                \"featureType\": \"road.arterial\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"color\": \"#ffffff\"}]\n            }, {\n                \"featureType\": \"road.arterial\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"color\": \"#ffffff\"}]\n            }, {\n                \"featureType\": \"landscape\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"visibility\": \"on\"}, {\"color\": \"#efefef\"}]\n            }, {\n                \"featureType\": \"road\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{\"color\": \"#696969\"}]\n            }, {\n                \"featureType\": \"administrative\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{\"visibility\": \"on\"}, {\"color\": \"#737373\"}]\n            }, {\n                \"featureType\": \"poi\",\n                \"elementType\": \"labels.icon\",\n                \"stylers\": [{\"visibility\": \"off\"}]\n            }, {\n                \"featureType\": \"poi\",\n                \"elementType\": \"labels\",\n                \"stylers\": [{\"visibility\": \"off\"}]\n            }, {\n                \"featureType\": \"road.arterial\",\n                \"elementType\": \"geometry.stroke\",\n                \"stylers\": [{\"color\": \"#d6d6d6\"}]\n            }, {\n                \"featureType\": \"road\",\n                \"elementType\": \"labels.icon\",\n                \"stylers\": [{\"visibility\": \"off\"}]\n            }, {\n                \"featureType\": \"poi\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"color\": \"#dadada\"}]\n            }]\n        },\n        googleElement: null\n    },\n    geoCoder: null,\n    distanceMatrix: null,\n    searchBox: null,\n    markers: null,\n    init: function () {\n        var mapDiv = document.getElementById(this.map.id);\n        this.map.googleElement = new google.maps.Map(mapDiv, this.map.options);\n\n        this.geoCoder = new google.maps.Geocoder();\n        this.distanceMatrix = new google.maps.DistanceMatrixService();\n        this.searchBox = $('#' + this.map.id).parent('.tx-bwrk-markermap').children('.tx-bwrk-markermap__searchbox');\n\n        var that = this;\n        this.markers.forEach(function (element, index) {\n            var tmpMarker = new google.maps.Marker({\n                position: element.position,\n                map: that.map.googleElement,\n                title: element.title,\n                icon: element.icon,\n                marker_id: element.uid\n            });\n            tmpMarker.addListener('click', function () {\n                $.ajax({\n                    method: \"GET\",\n                    url: \"index.php\",\n                    data: {\n                        'eID': 'bwrkMarkerWindow',\n                        'tx_bwrkmarkermap_pi2[uid]': tmpMarker.marker_id\n                    }\n                }).done(function (content) {\n                    new google.maps.InfoWindow({\n                        content: content\n                    }).open(that.map.googleElement, tmpMarker);\n                });\n            });\n        });\n\n        this.searchBox.children('form').submit(function () {\n            var inputValue = $(this).find('input[name=\"tx-bwrk-markermap__searchbox-input\"]').val();\n            that.codeAddress(inputValue);\n            return false;\n        });\n\n    },\n    codeAddress: function (address) {\n        var that = this;\n        this.geoCoder.geocode({\n            'address': address\n        },\n        function (results, status) {\n            if (status == google.maps.GeocoderStatus.OK) {\n                var result = results[0];\n                var nearestMarkerObject = that.measureDistance(result.geometry.location);\n                var nearestMarker = new google.maps.Marker({\n                    position: nearestMarkerObject.position\n                });\n                var locationMarker = new google.maps.Marker({\n                    map: that.map.googleElement,\n                    position: result.geometry.location\n                });\n                var markers = [];\n                    markers[0] = locationMarker;\n                    markers[1] = nearestMarker;\n                that.fitBounds(markers);\n            }\n        });\n    },\n    measureDistance: function(origin)\n    {\n        var lat = origin.lat();\n        var lng = origin.lng();\n        var R = 6371; // radius of earth in km\n        var distances = [];\n        var closest = -1;\n        var that = this;\n\n        for( i=0;i < this.markers.length; i++ ) {\n            var mlat = that.markers[i].position.lat;\n            var mlng = that.markers[i].position.lng;\n            var dLat  = that.rad(mlat - lat);\n            var dLong = that.rad(mlng - lng);\n            var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n                Math.cos(that.rad(lat)) * Math.cos(that.rad(lat)) * Math.sin(dLong/2) * Math.sin(dLong/2);\n            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n            var d = R * c;\n            distances[i] = d;\n            if ( closest == -1 || d < distances[closest] ) {\n                closest = i;\n            }\n        }\n        return this.markers[closest];\n    },\n    rad: function(x) {\n        return x*Math.PI/180;\n    },\n    fitBounds: function(markers)\n    {\n        var bounds = new google.maps.LatLngBounds();\n        for (var i = 0; i < markers.length; i++) {\n            bounds.extend(markers[i].getPosition());\n        }\n        this.map.googleElement.fitBounds(bounds);\n    }\n};"],"sourceRoot":"/source/"}