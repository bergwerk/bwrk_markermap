{"version":3,"sources":["map.js"],"names":["BwrkMarkerMap","map","id","options","center","lat","lng","zoom","scrollwheel","styles","featureType","elementType","stylers","color","visibility","weight","googleElement","geoCoder","distanceMatrix","geoCodeMarkers","searchBox","customMarkerIcon","markers","init","mapDiv","document","getElementById","this","google","maps","Map","Geocoder","DistanceMatrixService","$","parent","find","that","forEach","element","index","tmpMarker","Marker","position","title","icon","marker_id","uid","addListener","ajax","method","url","data","eID","tx_bwrkmarkermap_pi2[uid]","done","content","InfoWindow","open","submit","inputValue","val","codeAddress","address","geocode","region","results","status","GeocoderStatus","OK","setMapOnAll","result","nearestMarkerObject","measureDistance","geometry","location","nearestMarker","locationMarker","push","fitBounds","origin","R","distances","closest","i","length","mlat","mlng","dLat","rad","dLong","a","Math","sin","cos","c","atan2","sqrt","d","setMap","x","PI","bounds","LatLngBounds","extend","getPosition"],"mappings":"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","file":"app.js","sourcesContent":["var BwrkMarkerMap = {\n    map: {\n        id: null,\n        options: {\n            center: {\n                lat: null,\n                lng: null\n            },\n            zoom: null,\n\t\t\tscrollwheel: false,\n            styles: [{\n                \"featureType\": \"water\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"color\": \"#d3d3d3\"}]\n            }, {\n                \"featureType\": \"transit\",\n                \"stylers\": [{\"color\": \"#808080\"}, {\"visibility\": \"off\"}]\n            }, {\n                \"featureType\": \"road.highway\",\n                \"elementType\": \"geometry.stroke\",\n                \"stylers\": [{\"visibility\": \"on\"}, {\"color\": \"#b3b3b3\"}]\n            }, {\n                \"featureType\": \"road.highway\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"color\": \"#ffffff\"}]\n            }, {\n                \"featureType\": \"road.local\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"visibility\": \"on\"}, {\"color\": \"#ffffff\"}, {\"weight\": 1.8}]\n            }, {\n                \"featureType\": \"road.local\",\n                \"elementType\": \"geometry.stroke\",\n                \"stylers\": [{\"color\": \"#d7d7d7\"}]\n            }, {\n                \"featureType\": \"poi\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"visibility\": \"on\"}, {\"color\": \"#ebebeb\"}]\n            }, {\n                \"featureType\": \"administrative\",\n                \"elementType\": \"geometry\",\n                \"stylers\": [{\"color\": \"#a7a7a7\"}]\n            }, {\n                \"featureType\": \"road.arterial\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"color\": \"#ffffff\"}]\n            }, {\n                \"featureType\": \"road.arterial\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"color\": \"#ffffff\"}]\n            }, {\n                \"featureType\": \"landscape\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"visibility\": \"on\"}, {\"color\": \"#efefef\"}]\n            }, {\n                \"featureType\": \"road\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{\"color\": \"#696969\"}]\n            }, {\n                \"featureType\": \"administrative\",\n                \"elementType\": \"labels.text.fill\",\n                \"stylers\": [{\"visibility\": \"on\"}, {\"color\": \"#737373\"}]\n            }, {\n                \"featureType\": \"poi\",\n                \"elementType\": \"labels.icon\",\n                \"stylers\": [{\"visibility\": \"off\"}]\n            }, {\n                \"featureType\": \"poi\",\n                \"elementType\": \"labels\",\n                \"stylers\": [{\"visibility\": \"off\"}]\n            }, {\n                \"featureType\": \"road.arterial\",\n                \"elementType\": \"geometry.stroke\",\n                \"stylers\": [{\"color\": \"#d6d6d6\"}]\n            }, {\n                \"featureType\": \"road\",\n                \"elementType\": \"labels.icon\",\n                \"stylers\": [{\"visibility\": \"off\"}]\n            }, {\n                \"featureType\": \"poi\",\n                \"elementType\": \"geometry.fill\",\n                \"stylers\": [{\"color\": \"#dadada\"}]\n            }]\n        },\n        googleElement: null\n    },\n    geoCoder: null,\n    distanceMatrix: null,\n    geoCodeMarkers: [],\n    searchBox: null,\n    customMarkerIcon: null,\n    markers: null,\n    init: function () {\n        var mapDiv = document.getElementById(this.map.id);\n        this.map.googleElement = new google.maps.Map(mapDiv, this.map.options);\n\n        this.geoCoder = new google.maps.Geocoder();\n        this.distanceMatrix = new google.maps.DistanceMatrixService();\n        this.searchBox = $('#' + this.map.id).parent('.tx-bwrk-markermap').find('.tx-bwrk-markermap__searchbox');\n\n        var that = this;\n        this.markers.forEach(function (element, index) {\n            var tmpMarker = new google.maps.Marker({\n                position: element.position,\n                map: that.map.googleElement,\n                title: element.title,\n                icon: element.icon,\n                marker_id: element.uid\n            });\n            tmpMarker.addListener('click', function () {\n                $.ajax({\n                    method: \"GET\",\n                    url: \"index.php\",\n                    data: {\n                        'eID': 'bwrkMarkerWindow',\n                        'tx_bwrkmarkermap_pi2[uid]': tmpMarker.marker_id\n                    }\n                }).done(function (content) {\n                    new google.maps.InfoWindow({\n                        content: content\n                    }).open(that.map.googleElement, tmpMarker);\n                });\n            });\n        });\n\n        this.searchBox.find('form').submit(function () {\n            var inputValue = $(this).find('input[name=\"tx-bwrk-markermap__searchbox-input\"]').val();\n            that.codeAddress(inputValue);\n            return false;\n        });\n\n    },\n    codeAddress: function (address) {\n        var that = this;\n        this.geoCoder.geocode({\n                'address': address,\n                'region': 'de'\n            },\n            function (results, status) {\n                if (status == google.maps.GeocoderStatus.OK) {\n                    that.setMapOnAll(that.geoCodeMarkers, null);\n\n                    var result = results[0];\n                    var nearestMarkerObject = that.measureDistance(result.geometry.location);\n                    var nearestMarker = new google.maps.Marker({\n                        position: nearestMarkerObject.position\n                    });\n                    var locationMarker = new google.maps.Marker({\n                        map: that.map.googleElement,\n                        position: result.geometry.location,\n                        icon: that.customMarkerIcon\n                    });\n                    that.geoCodeMarkers.push(locationMarker);\n\n                    var markers = [];\n                    markers[0] = locationMarker;\n                    markers[1] = nearestMarker;\n                    that.fitBounds(markers);\n                }\n            });\n    },\n    measureDistance: function (origin) {\n        var lat = origin.lat();\n        var lng = origin.lng();\n        var R = 6371; // radius of earth in km\n        var distances = [];\n        var closest = -1;\n        var that = this;\n\n        for (i = 0; i < this.markers.length; i++) {\n            var mlat = that.markers[i].position.lat;\n            var mlng = that.markers[i].position.lng;\n            var dLat = that.rad(mlat - lat);\n            var dLong = that.rad(mlng - lng);\n            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n                Math.cos(that.rad(lat)) * Math.cos(that.rad(lat)) * Math.sin(dLong / 2) * Math.sin(dLong / 2);\n            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n            var d = R * c;\n            distances[i] = d;\n            if (closest == -1 || d < distances[closest]) {\n                closest = i;\n            }\n        }\n        return this.markers[closest];\n    },\n    setMapOnAll: function (markers, map) {\n        for (var i = 0; i < markers.length; i++) {\n            markers[i].setMap(map);\n        }\n    },\n    rad: function (x) {\n        return x * Math.PI / 180;\n    },\n    fitBounds: function (markers) {\n        var bounds = new google.maps.LatLngBounds();\n        for (var i = 0; i < markers.length; i++) {\n            bounds.extend(markers[i].getPosition());\n        }\n        this.map.googleElement.fitBounds(bounds);\n    }\n};\n"],"sourceRoot":"/source/"}